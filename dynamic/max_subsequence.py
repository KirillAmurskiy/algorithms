"""Наибольшая последовательнократная подпоследовательность.
Дано целое число 1≤n≤10^3 и массив A[1…n] натуральных чисел, не превосходящих 2*10^9.
Выведите максимальное 1≤k≤n, для которого найдётся подпоследовательность 1≤i1<i2<…<ik≤n длины k,
в которой каждый элемент делится на предыдущий (формально: для  всех 1≤j<k, A[i_j] | A[i_j+1]).

Максимальное значение n=10^3, т.о. нас вполне устроит алгоритм сложности O(n^2)."""


def max_subsequence_n2():
    n = int(input())
    a = [int(i) for i in input().split()]

    b = [1] * len(a)

    for i in range(1, len(a)):
        for j in range(i - 1, -1, -1):
            if a[i] % a[j] == 0 and b[j] + 1 > b[i]:
                b[i] = b[j] + 1

    k = max(b)
    print(k)


if __name__ == "__main__":
    max_subsequence_n2()
    #max_subsequence_nlogn()
